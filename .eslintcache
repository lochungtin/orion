[{"/home/timothy/Data/Projects/Orion/orion/src/index.js":"1","/home/timothy/Data/Projects/Orion/orion/src/App.js":"2","/home/timothy/Data/Projects/Orion/orion/src/reportWebVitals.js":"3","/home/timothy/Data/Projects/Orion/orion/src/navigation/index.js":"4","/home/timothy/Data/Projects/Orion/orion/src/redux/store.js":"5","/home/timothy/Data/Projects/Orion/orion/src/redux/reducer.js":"6","/home/timothy/Data/Projects/Orion/orion/src/components/SidebarBtn.js":"7","/home/timothy/Data/Projects/Orion/orion/src/screens/Dashboard.js":"8","/home/timothy/Data/Projects/Orion/orion/src/screens/History.js":"9","/home/timothy/Data/Projects/Orion/orion/src/screens/Settings.js":"10","/home/timothy/Data/Projects/Orion/orion/src/screens/Statistics.js":"11","/home/timothy/Data/Projects/Orion/orion/src/screens/Login.js":"12","/home/timothy/Data/Projects/Orion/orion/src/screens/Files.js":"13","/home/timothy/Data/Projects/Orion/orion/src/redux/action.js":"14","/home/timothy/Data/Projects/Orion/orion/src/components/ToggleSwitch.js":"15"},{"size":500,"mtime":1609610356007,"results":"16","hashOfConfig":"17"},{"size":358,"mtime":1609737896404,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1609610356007,"results":"19","hashOfConfig":"17"},{"size":3085,"mtime":1610100220281,"results":"20","hashOfConfig":"17"},{"size":113,"mtime":1609737095113,"results":"21","hashOfConfig":"17"},{"size":1070,"mtime":1610127579573,"results":"22","hashOfConfig":"17"},{"size":363,"mtime":1610090905519,"results":"23","hashOfConfig":"17"},{"size":353,"mtime":1610097085300,"results":"24","hashOfConfig":"17"},{"size":202,"mtime":1609839541733,"results":"25","hashOfConfig":"17"},{"size":204,"mtime":1609839518446,"results":"26","hashOfConfig":"17"},{"size":203,"mtime":1609839531056,"results":"27","hashOfConfig":"17"},{"size":2432,"mtime":1610096803468,"results":"28","hashOfConfig":"17"},{"size":6231,"mtime":1610132809561,"results":"29","hashOfConfig":"17"},{"size":578,"mtime":1610102543659,"results":"30","hashOfConfig":"17"},{"size":760,"mtime":1609830599973,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1wfrtp7",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"/home/timothy/Data/Projects/Orion/orion/src/index.js",[],["68","69"],"/home/timothy/Data/Projects/Orion/orion/src/App.js",[],"/home/timothy/Data/Projects/Orion/orion/src/reportWebVitals.js",[],"/home/timothy/Data/Projects/Orion/orion/src/navigation/index.js",["70"],"import React from 'react';\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport SidebarBtn from '../components/SidebarBtn';\nimport Dashboard from '../screens/Dashboard';\nimport Files from '../screens/Files';\nimport History from '../screens/History';\nimport Login from '../screens/Login';\nimport Settings from '../screens/Settings';\nimport Statistics from '../screens/Statistics';\nimport { setLogout } from '../redux/action';\nimport { store } from '../redux/store';\n\nclass Index extends React.Component {\n\n    constructor() {\n        super();\n    }\n\n    logout = () => {\n        store.dispatch(setLogout());\n        window.location = 'http://localhost:3000/'\n    }\n\n    render() {\n        return (\n            <>\n                {this.props.acc === null ?\n                    <div className='root'>\n                        <Login />\n                    </div> :\n                    <Router>\n                        <div className='root'>\n                            <nav>\n                                <div className='sidebarEnds'>\n                                    <p className='sidebarCornerText'>orion.</p>\n                                </div>\n                                <div className='sidebarBtns'>\n                                    <SidebarBtn text={'dashboard'} />\n                                    <SidebarBtn text={'files'} />\n                                    <SidebarBtn text={'history'} />\n                                    <SidebarBtn text={'statistics'} />\n                                    <SidebarBtn text={'settings'} />\n                                </div>\n                                <div className='sidebarEnds'>\n                                    <button className='logoutBtn' onClick={this.logout}>\n                                        <p>logout</p>\n                                    </button>\n                                </div>\n                            </nav>\n\n                            <Switch>\n                                <Route\n                                    exact\n                                    path='/'\n                                    render={() => <Redirect to='/dashboard' />}\n                                />\n                                <div className='content'>\n                                    <Route exact path='/dashboard' component={Dashboard} />\n                                    <Route exact path='/files' component={Files} />\n                                    <Route exact path='/history' component={History} />\n                                    <Route exact path='/statistics' component={Statistics} />\n                                    <Route exact path='/settings' component={Settings} />\n                                </div>\n                            </Switch>\n                        </div>\n                    </Router>\n                }\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    acc: state.acc\n});\n\nexport default connect(mapStateToProps)(Index);","/home/timothy/Data/Projects/Orion/orion/src/redux/store.js",[],"/home/timothy/Data/Projects/Orion/orion/src/redux/reducer.js",["71","72"],"import { combineReducers } from 'redux';\nimport { FS_BACK, FS_SET_CONTENT, FS_SET_DIR, SET_LOGIN, SET_LOGOUT, } from './action';\n\nconst acc = (acc = null, action) => {\n    switch (action.type) {\n        case SET_LOGIN:\n            return action.payload;\n        case SET_LOGOUT:\n            return null;\n    }\n    return acc;\n}\n\nconst fsInit = {\n    dir: '',\n    content: {\n        dirs: [],\n        files: [],\n    },\n    stack: []\n}\nconst fs = (data = fsInit, action) => {\n    var update = { ...data };\n    switch (action.type) {\n        case FS_BACK:\n            if (update.stack.length > 1) {\n                update.stack.pop();\n                update.dir = update.stack[update.stack.length - 1];\n            }\n            return update;\n        case FS_SET_DIR:\n            update.dir = action.payload;\n            update.stack.push(action.payload);\n            return update;\n        case FS_SET_CONTENT:\n            update.content = action.payload;\n            return update;\n    }\n    return data;\n}\n\nexport default combineReducers({\n    acc: acc,\n    fs: fs,\n});","/home/timothy/Data/Projects/Orion/orion/src/components/SidebarBtn.js",[],"/home/timothy/Data/Projects/Orion/orion/src/screens/Dashboard.js",[],"/home/timothy/Data/Projects/Orion/orion/src/screens/History.js",[],"/home/timothy/Data/Projects/Orion/orion/src/screens/Settings.js",[],"/home/timothy/Data/Projects/Orion/orion/src/screens/Statistics.js",[],"/home/timothy/Data/Projects/Orion/orion/src/screens/Login.js",["73"],"import axios from 'axios';\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport User from '../img/icon/user.png';\nimport Lock from '../img/icon/lock.png';\nimport { setLogin } from '../redux/action';\nimport { store } from '../redux/store';\n\nexport default class Login extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            username: '',\n            password: '',\n            repswd: '',\n            signup: false,\n        }\n\n        this.handleEmail = this.handleEmail.bind(this);\n        this.handlePswd = this.handlePswd.bind(this);\n    }\n\n    handleEmail = event => this.setState({ username: event.target.value });\n\n    handlePswd = event => this.setState({ password: event.target.value });\n\n    login = () => {\n        axios.get('http://localhost:5000/accounts/')\n            .then(res => {\n                var account = res.data.filter(acc => acc.username === this.state.username)[0];\n                if (account !== undefined) {\n                    if (account.password === this.state.password) \n                        store.dispatch(setLogin(account));\n                }\n            });\n    }\n\n    render() {\n        return (\n            <div className='loginRoot'>\n                <div className='loginStrip'>\n                    <div style={{ height: '20vh' }} />\n                    <p className='noselect loginText'>orion.</p>\n                    <div style={{ height: '2vh' }} />\n\n\n                    <p className='noselect loginInputLabel'>Username</p>\n                    <div className='loginInputBox'>\n                        <img className='loginIcons' src={User} alt='logo' />\n                        <input className='loginInput' type='text' placeholder='Type your username' onChange={this.handleEmail} />\n                    </div>\n                    <p className='noselect loginInputLabel'>Password</p>\n                    <div className='loginInputBox'>\n                        <img className='loginIcons' src={Lock} alt='logo' />\n                        <input className='loginInput' type='password' placeholder='Type your password' onChange={this.handlePswd} />\n                    </div>\n                    <div style={{ height: '6vh' }} />\n\n                    <button className='loginBtn' onClick={this.login}>\n                        <p>LOGIN</p>\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}","/home/timothy/Data/Projects/Orion/orion/src/screens/Files.js",["74","75"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\n\nimport ToggleSwitch from '../components/ToggleSwitch';\nimport folder from '../img/folder.png';\nimport chevL from '../img/left.png';\nimport fileE from '../img/fileE.png'\nimport fileF from '../img/fileF.png'\nimport { store } from '../redux/store';\nimport { fsBack, fsSetContent, fsSetDir } from '../redux/action';\n\nconst clt = new W3CWebSocket('ws://127.0.0.1:8000');\n\nclass Files extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            details: {},\n            hidden: false,\n            searchMode: false,\n            selection: [],\n        }\n    }\n\n    componentDidMount() {\n        clt.send('get' + this.props.acc.rootDir);\n        clt.onmessage = message => {\n            const cmd = message.data.slice(0, 3);\n            const payload = message.data.substring(3);\n            switch (cmd) {\n                case 'cnt':\n                    store.dispatch(fsSetContent(JSON.parse(payload)));\n                    break;\n                case 'dtl':\n                    this.setState({ details: JSON.parse(payload) });\n            }\n        }\n        store.dispatch(fsSetDir(this.props.acc.rootDir));\n    }\n\n    append = folder => this.props.fs.dir + folder + '/';\n\n    back = () => {\n        var l = this.props.fs.stack.length;\n        if (l > 1)\n            clt.send('get' + this.props.fs.stack[l - 2]);\n        store.dispatch(fsBack());\n    }\n\n    goto = dir => {\n        store.dispatch(fsSetDir(dir));\n        clt.send('get' + dir);\n    }\n\n    jump = dir => {\n        if (!this.props.acc.rootDir.includes(dir)) {\n            var splt = this.props.fs.dir.split('/').filter(d => d !== '');\n            var str = '/';\n            splt.slice(0, splt.indexOf(dir) + 1).forEach(d => str += d + '/');\n            return str;\n        }\n        return this.props.acc.rootDir;\n    }\n\n    select = select => {\n        const arr = [...this.state.selection];\n        const index = arr.indexOf(select);\n        if (index === -1)\n            arr.push(select);\n        else\n            arr.splice(index, 1);\n        this.setState({ selection: arr });\n        if (arr.length === 1)\n            clt.send('dtl' + this.props.fs.dir + arr[0]);\n        else\n            this.setState({ details: {}});\n    }\n\n    sortHidden = (a, b) => a.substring(0, 1).indexOf('.') - b.substring(0, 1).indexOf('.');\n\n    tFocus = v => this.setState({ searchMode: v });\n\n    tHidden = () => this.setState({ hidden: !this.state.hidden });\n\n    render() {\n        return (\n            <div>\n                <div className='fileTop'>\n                    <button className='fileNavBtn' onClick={this.back}>\n                        <img className='fileNavImg' src={chevL} />\n                    </button>\n                    <div className='fileDirBar'>\n                        {this.props.fs.dir.split('/').filter(t => t !== '').map(t => {\n                            return (\n                                <button onClick={() => this.goto(this.jump(t))} key={t}>\n                                    <p className='fileDirBarText noselect'>{'/ ' + t}</p>\n                                </button>\n                            );\n                        })}\n                    </div>\n                    <div className='fileOptionBar'>\n                        <ToggleSwitch checked={this.state.checked} text={this.state.searchMode ? '' : 'Hidden'} toggle={this.tHidden} />\n                        <input\n                            className='fileSearchbarInput'\n                            onFocus={() => this.tFocus(true)}\n                            onBlur={() => this.tFocus(false)}\n                            placeholder='search ...'\n                            type='text'\n                        />\n                    </div>\n                </div>\n                <div className='fileContent'>\n                    <div className='fileFolders'>\n                        {this.props.fs.content.dirs\n                            .filter(d => !d.startsWith('.') || this.state.hidden)\n                            .sort(this.sortHidden)\n                            .map(d => {\n                                return (\n                                    <button onClick={() => this.goto(this.append(d))} key={d}>\n                                        <div className='fileFolder noselect'>\n                                            <img className='fileFolderImg' src={folder} alt='folder' />\n                                            <p className='fileItemText'>{d.substring(0, 15) + (d.length > 15 ? '...' : '')}</p>\n                                        </div>\n                                    </button>\n                                );\n                            })}\n                    </div>\n                    <div className='fileFiles'>\n                        {this.props.fs.content.files\n                            .filter(d => !d.startsWith('.') || this.state.hidden)\n                            .sort(this.sortHidden)\n                            .map(f => {\n                                return (\n                                    <button onClick={() => this.select(f)} key={f}>\n                                        <div className='fileFolder noselect'>\n                                            <img className='fileFileImg' src={this.state.selection.includes(f) ? fileF : fileE} alt='file' />\n                                            <p className='fileItemText'>{f}</p>\n                                        </div>\n                                    </button>\n                                );\n                            })}\n                    </div>\n                    <div className='fileMoreInfo'>\n                        <p>{this.state.details.path}</p>\n                        <p>{this.state.details.size}</p>\n                        <p>{this.state.details.bTime}</p>\n                        <p>{this.state.details.mTime}</p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    acc: state.acc,\n    fs: state.fs,\n});\n\nexport default connect(mapStateToProps)(Files);","/home/timothy/Data/Projects/Orion/orion/src/redux/action.js",[],"/home/timothy/Data/Projects/Orion/orion/src/components/ToggleSwitch.js",[],["76","77"],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":17,"column":5,"nodeType":"84","messageId":"85","endLine":19,"endColumn":6},{"ruleId":"86","severity":1,"message":"87","line":5,"column":5,"nodeType":"88","messageId":"89","endLine":10,"endColumn":6},{"ruleId":"86","severity":1,"message":"87","line":24,"column":5,"nodeType":"88","messageId":"89","endLine":38,"endColumn":6},{"ruleId":"90","severity":1,"message":"91","line":3,"column":10,"nodeType":"92","messageId":"93","endLine":3,"endColumn":17},{"ruleId":"86","severity":1,"message":"87","line":32,"column":13,"nodeType":"88","messageId":"89","endLine":38,"endColumn":14},{"ruleId":"94","severity":1,"message":"95","line":92,"column":25,"nodeType":"96","endLine":92,"endColumn":67},{"ruleId":"78","replacedBy":"97"},{"ruleId":"80","replacedBy":"98"},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unused-vars","'connect' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["99"],["100"],"no-global-assign","no-unsafe-negation"]