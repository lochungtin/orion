[{"/home/timothy/Data/Projects/Orion/orion/src/index.js":"1","/home/timothy/Data/Projects/Orion/orion/src/App.js":"2","/home/timothy/Data/Projects/Orion/orion/src/reportWebVitals.js":"3","/home/timothy/Data/Projects/Orion/orion/src/navigation/index.js":"4","/home/timothy/Data/Projects/Orion/orion/src/redux/store.js":"5","/home/timothy/Data/Projects/Orion/orion/src/redux/reducer.js":"6","/home/timothy/Data/Projects/Orion/orion/src/components/SidebarBtn.js":"7","/home/timothy/Data/Projects/Orion/orion/src/screens/Dashboard.js":"8","/home/timothy/Data/Projects/Orion/orion/src/screens/History.js":"9","/home/timothy/Data/Projects/Orion/orion/src/screens/Settings.js":"10","/home/timothy/Data/Projects/Orion/orion/src/screens/Statistics.js":"11","/home/timothy/Data/Projects/Orion/orion/src/screens/Login.js":"12","/home/timothy/Data/Projects/Orion/orion/src/screens/Files.js":"13","/home/timothy/Data/Projects/Orion/orion/src/redux/action.js":"14","/home/timothy/Data/Projects/Orion/orion/src/components/ToggleSwitch.js":"15","/home/timothy/Data/Projects/Orion/orion/src/client/index.js":"16"},{"size":500,"mtime":1609610356007,"results":"17","hashOfConfig":"18"},{"size":354,"mtime":1611997544895,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1609610356007,"results":"20","hashOfConfig":"18"},{"size":3049,"mtime":1612071392489,"results":"21","hashOfConfig":"18"},{"size":113,"mtime":1609737095113,"results":"22","hashOfConfig":"18"},{"size":1376,"mtime":1611990113459,"results":"23","hashOfConfig":"18"},{"size":363,"mtime":1610090905519,"results":"24","hashOfConfig":"18"},{"size":353,"mtime":1610097085300,"results":"25","hashOfConfig":"18"},{"size":202,"mtime":1609839541733,"results":"26","hashOfConfig":"18"},{"size":204,"mtime":1609839518446,"results":"27","hashOfConfig":"18"},{"size":203,"mtime":1609839531056,"results":"28","hashOfConfig":"18"},{"size":5776,"mtime":1612109898086,"results":"29","hashOfConfig":"18"},{"size":5890,"mtime":1612020004506,"results":"30","hashOfConfig":"18"},{"size":801,"mtime":1611990069642,"results":"31","hashOfConfig":"18"},{"size":760,"mtime":1609830599973,"results":"32","hashOfConfig":"18"},{"size":706,"mtime":1612077633621,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1wfrtp7",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/timothy/Data/Projects/Orion/orion/src/index.js",[],["69","70"],"/home/timothy/Data/Projects/Orion/orion/src/App.js",[],"/home/timothy/Data/Projects/Orion/orion/src/reportWebVitals.js",[],"/home/timothy/Data/Projects/Orion/orion/src/navigation/index.js",[],"/home/timothy/Data/Projects/Orion/orion/src/redux/store.js",[],"/home/timothy/Data/Projects/Orion/orion/src/redux/reducer.js",["71","72","73"],"import { combineReducers } from 'redux';\nimport { FS_BACK, FS_SET_CONTENT, FS_SET_DETAIL, FS_SET_DIR, SET_CLIENT, SET_LOGIN, SET_LOGOUT, } from './action';\n\nconst acc = (acc = null, action) => {\n    switch (action.type) {\n        case SET_LOGIN:\n            return action.payload;\n        case SET_LOGOUT:\n            return null;\n    }\n    return acc;\n}\n\nconst clt = (clt = {}, action) => {\n    switch (action.type) {\n        case SET_CLIENT:\n            return action.payload;\n    }\n    return clt;\n}\n\nconst fsInit = {\n    details: {},\n    dir: '',\n    content: {\n        dirs: [],\n        files: [],\n    },\n    stack: []\n}\nconst fs = (data = fsInit, action) => {\n    var update = { ...data };\n    switch (action.type) {\n        case FS_BACK:\n            if (update.stack.length > 1) {\n                update.stack.pop();\n                update.dir = update.stack[update.stack.length - 1];\n            }\n            return update;\n        case FS_SET_DIR:\n            update.dir = action.payload;\n            update.stack.push(action.payload);\n            return update;\n        case FS_SET_CONTENT:\n            update.content = action.payload;\n            return update;\n        case FS_SET_DETAIL:\n            update.details = action.payload;\n            return update;\n    }\n    return data;\n}\n\nexport default combineReducers({\n    acc: acc,\n    clt: clt,\n    fs: fs,\n});","/home/timothy/Data/Projects/Orion/orion/src/components/SidebarBtn.js",[],"/home/timothy/Data/Projects/Orion/orion/src/screens/Dashboard.js",[],"/home/timothy/Data/Projects/Orion/orion/src/screens/History.js",[],"/home/timothy/Data/Projects/Orion/orion/src/screens/Settings.js",[],"/home/timothy/Data/Projects/Orion/orion/src/screens/Statistics.js",[],"/home/timothy/Data/Projects/Orion/orion/src/screens/Login.js",[],"/home/timothy/Data/Projects/Orion/orion/src/screens/Files.js",["74"],"import React from 'react';\nimport { connect } from 'react-redux';\n\nimport ToggleSwitch from '../components/ToggleSwitch';\nimport folder from '../img/folder.png';\nimport chevL from '../img/left.png';\nimport fileE from '../img/fileE.png'\nimport fileF from '../img/fileF.png'\nimport { store } from '../redux/store';\nimport { fsBack, fsSetDetail, fsSetDir } from '../redux/action';\n\nclass Files extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            hidden: false,\n            searchMode: false,\n            selection: [],\n        }\n    }\n\n    componentDidMount() {\n        this.props.clt.send('get' + this.props.acc.rootDir);\n        store.dispatch(fsSetDir(this.props.acc.rootDir));\n    }\n\n    append = folder => this.props.fs.dir + '/' + folder;\n\n    back = () => {\n        var l = this.props.fs.stack.length;\n        if (l > 1)\n            this.props.clt.send('get' + this.props.fs.stack[l - 2]);\n        store.dispatch(fsBack());\n    }\n\n    goto = dir => {\n        store.dispatch(fsSetDir(dir));\n        this.props.clt.send('get' + dir);\n    }\n\n    jump = dir => {\n        if (!this.props.acc.rootDir.includes(dir)) {\n            const splt = this.props.fs.dir.split('/').filter(d => d !== '');\n            let str = '/';\n            splt.slice(0, splt.indexOf(dir) + 1).forEach(d => str += d + '/');\n            return str;\n        }\n        return this.props.acc.rootDir;\n    }\n\n    select = select => {\n        const arr = [...this.state.selection];\n        const index = arr.indexOf(this.props.fs.dir + select);\n        if (index === -1)\n            arr.push(this.props.fs.dir + select);\n        else\n            arr.splice(index, 1);\n        this.setState({ selection: arr });\n        if (arr.length === 1)\n            this.props.clt.send('dtl' + arr[0]);\n        else\n            store.dispatch(fsSetDetail({}));\n    }\n\n    size = bytes => bytes / Math.pow(1024, Math.floor((Math.log(bytes) / Math.log(1024))));\n\n    sortHidden = (a, b) => a.substring(0, 1).indexOf('.') - b.substring(0, 1).indexOf('.');\n\n    tFocus = v => this.setState({ searchMode: v });\n\n    tHidden = () => this.setState({ hidden: !this.state.hidden });\n\n    render() {\n        return (\n            <div>\n                <div className='fileTop'>\n                    <button className='fileNavBtn' onClick={this.back}>\n                        <img className='fileNavImg' src={chevL} />\n                    </button>\n                    <div className='fileDirBar'>\n                        {this.props.fs.dir.split('/').filter(t => t !== '').map(t => {\n                            return (\n                                <button onClick={() => this.goto(this.jump(t))} key={t}>\n                                    <p className='fileDirBarText noselect'>{'/ ' + t}</p>\n                                </button>\n                            );\n                        })}\n                    </div>\n                    <div className='fileOptionBar'>\n                        <ToggleSwitch checked={this.state.checked} text={this.state.searchMode ? '' : 'Hidden'} toggle={this.tHidden} />\n                        <input\n                            className='fileSearchbarInput'\n                            onFocus={() => this.tFocus(true)}\n                            onBlur={() => this.tFocus(false)}\n                            placeholder='search ...'\n                            type='text'\n                        />\n                    </div>\n                </div>\n                <div className='fileContent'>\n                    <div className='fileFolders'>\n                        {this.props.fs.content.dirs\n                            .filter(d => !d.startsWith('.') || this.state.hidden)\n                            .sort(this.sortHidden)\n                            .map(d => {\n                                return (\n                                    <button onClick={() => this.goto(this.append(d))} key={d}>\n                                        <div className='fileFolder noselect'>\n                                            <img className='fileFolderImg' src={folder} alt='folder' />\n                                            <p className='fileItemText'>{d.substring(0, 15) + (d.length > 15 ? '...' : '')}</p>\n                                        </div>\n                                    </button>\n                                );\n                            })}\n                    </div>\n                    <div className='fileFiles'>\n                        {this.props.fs.content.files\n                            .filter(d => !d.startsWith('.') || this.state.hidden)\n                            .sort(this.sortHidden)\n                            .map(f => {\n                                return (\n                                    <button onClick={() => this.select(f)} key={f}>\n                                        <div className='fileFolder noselect'>\n                                            <img className='fileFileImg' src={this.state.selection.includes(this.props.fs.dir + f) ? fileF : fileE} alt='file' />\n                                            <p className='fileItemText'>{f}</p>\n                                        </div>\n                                    </button>\n                                );\n                            })}\n                    </div>\n                    <div className='fileMoreInfo'>\n                        <p>{this.props.fs.details.path}</p>\n                        <p>{this.props.fs.details.size}</p>\n                        <p>{this.props.fs.details.bTime}</p>\n                        <p>{this.props.fs.details.mTime}</p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    acc: state.acc,\n    clt: state.clt,\n    fs: state.fs,\n});\n\nexport default connect(mapStateToProps)(Files);","/home/timothy/Data/Projects/Orion/orion/src/redux/action.js",[],"/home/timothy/Data/Projects/Orion/orion/src/components/ToggleSwitch.js",[],"/home/timothy/Data/Projects/Orion/orion/src/client/index.js",["75","76","77"],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":5,"column":5,"nodeType":"84","messageId":"85","endLine":10,"endColumn":6},{"ruleId":"82","severity":1,"message":"83","line":15,"column":5,"nodeType":"84","messageId":"85","endLine":18,"endColumn":6},{"ruleId":"82","severity":1,"message":"83","line":33,"column":5,"nodeType":"84","messageId":"85","endLine":50,"endColumn":6},{"ruleId":"86","severity":1,"message":"87","line":79,"column":25,"nodeType":"88","endLine":79,"endColumn":67},{"ruleId":"89","severity":1,"message":"90","line":3,"column":10,"nodeType":"91","messageId":"92","endLine":3,"endColumn":16},{"ruleId":"89","severity":1,"message":"93","line":3,"column":45,"nodeType":"91","messageId":"92","endLine":3,"endColumn":53},{"ruleId":"82","severity":1,"message":"83","line":12,"column":9,"nodeType":"84","messageId":"85","endLine":19,"endColumn":10},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'fsBack' is defined but never used.","Identifier","unusedVar","'fsSetDir' is defined but never used.","no-global-assign","no-unsafe-negation"]