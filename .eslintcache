[{"/home/timothy/Data/Projects/Orion/orion/src/index.js":"1","/home/timothy/Data/Projects/Orion/orion/src/App.js":"2","/home/timothy/Data/Projects/Orion/orion/src/reportWebVitals.js":"3","/home/timothy/Data/Projects/Orion/orion/src/navigation/index.js":"4","/home/timothy/Data/Projects/Orion/orion/src/redux/store.js":"5","/home/timothy/Data/Projects/Orion/orion/src/redux/reducer.js":"6","/home/timothy/Data/Projects/Orion/orion/src/components/SidebarBtn.js":"7","/home/timothy/Data/Projects/Orion/orion/src/screens/Dashboard.js":"8","/home/timothy/Data/Projects/Orion/orion/src/screens/Settings.js":"9","/home/timothy/Data/Projects/Orion/orion/src/screens/Login.js":"10","/home/timothy/Data/Projects/Orion/orion/src/screens/Files.js":"11","/home/timothy/Data/Projects/Orion/orion/src/redux/action.js":"12","/home/timothy/Data/Projects/Orion/orion/src/components/ToggleSwitch.js":"13","/home/timothy/Data/Projects/Orion/orion/src/client/index.js":"14","/home/timothy/Data/Projects/Orion/orion/src/utils/size.js":"15","/home/timothy/Data/Projects/Orion/orion/src/utils/randomKey.js":"16"},{"size":500,"mtime":1609610356007,"results":"17","hashOfConfig":"18"},{"size":354,"mtime":1611997544895,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1609610356007,"results":"20","hashOfConfig":"18"},{"size":2738,"mtime":1612895280265,"results":"21","hashOfConfig":"18"},{"size":113,"mtime":1609737095113,"results":"22","hashOfConfig":"18"},{"size":2424,"mtime":1613057957919,"results":"23","hashOfConfig":"18"},{"size":363,"mtime":1610090905519,"results":"24","hashOfConfig":"18"},{"size":9139,"mtime":1613057929115,"results":"25","hashOfConfig":"18"},{"size":204,"mtime":1609839518446,"results":"26","hashOfConfig":"18"},{"size":5476,"mtime":1613623509259,"results":"27","hashOfConfig":"18"},{"size":9387,"mtime":1612946744257,"results":"28","hashOfConfig":"18"},{"size":1663,"mtime":1613044581167,"results":"29","hashOfConfig":"18"},{"size":760,"mtime":1609830599973,"results":"30","hashOfConfig":"18"},{"size":1021,"mtime":1612946352683,"results":"31","hashOfConfig":"18"},{"size":239,"mtime":1612946602503,"results":"32","hashOfConfig":"18"},{"size":134,"mtime":1612946767035,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1wfrtp7",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/home/timothy/Data/Projects/Orion/orion/src/index.js",[],["72","73"],"/home/timothy/Data/Projects/Orion/orion/src/App.js",[],"/home/timothy/Data/Projects/Orion/orion/src/reportWebVitals.js",[],"/home/timothy/Data/Projects/Orion/orion/src/navigation/index.js",[],"/home/timothy/Data/Projects/Orion/orion/src/redux/store.js",[],"/home/timothy/Data/Projects/Orion/orion/src/redux/reducer.js",["74","75","76","77"],"import { combineReducers } from 'redux';\nimport { DEV_SET, FS_BACK, FS_SET_CONTENT, FS_SET_DETAIL, FS_SET_DIR, FS_SET_FOCUS, FS_SET_HIDDEN, FS_SET_SEARCH, FS_SET_SELECTION, FS_SET_STATS, SET_CLIENT, SET_LOGIN, SET_LOGOUT, } from './action';\n\nconst acc = (acc = null, action) => {\n    switch (action.type) {\n        case SET_LOGIN:\n            return action.payload;\n        case SET_LOGOUT:\n            return null;\n    }\n    return acc;\n}\n\nconst clt = (clt = {}, action) => {\n    switch (action.type) {\n        case SET_CLIENT:\n            return action.payload;\n    }\n    return clt;\n}\n\nconst bkupInit = {\n    status: '--/--'\n}\nconst bkup = (bkup = bkupInit, action) => {\n    var update = { ...bkup };\n    return update;\n}\n\nconst fsInit = {\n    details: {},\n    dir: '',\n    content: {\n        dirs: [],\n        files: [],\n    },\n    focus: false,\n    hidden: false,\n    stack: [],\n    search: '',\n    select: '',\n    stats: {\n        free: 'calculating ...',\n        size: 'calculating ...',\n    }\n}\nconst fs = (fs = fsInit, action) => {\n    var update = { ...fs };\n    switch (action.type) {\n        case FS_BACK:\n            if (update.stack.length > 1) {\n                update.stack.pop();\n                update.dir = update.stack[update.stack.length - 1];\n            }\n            return update;\n\n        case FS_SET_CONTENT:\n            update.content = action.payload;\n            return update;\n\n        case FS_SET_DETAIL:\n            update.details = action.payload;\n            return update;\n\n        case FS_SET_DIR:\n            update.dir = action.payload;\n            update.stack.push(action.payload);\n            return update;\n\n        case FS_SET_FOCUS:\n            update.focus = action.payload;\n            return update;\n\n        case FS_SET_HIDDEN:\n            update.hidden = action.payload;\n            return update;\n\n        case FS_SET_SEARCH:\n            update.search = action.payload;\n            return update;\n\n        case FS_SET_SELECTION:\n            update.select = action.payload;\n            return update;\n\n        case FS_SET_STATS:\n            update.stats = action.payload;\n            return update;\n    }\n    return fs;\n}\n\nconst dev = (dev = [], action) => {\n    switch (action.type) {\n        case DEV_SET:\n            return action.payload;\n    }\n    return dev;\n}\n\nexport default combineReducers({\n    acc: acc,\n    bkup: bkup,\n    clt: clt,\n    dev: dev,\n    fs: fs,\n});","/home/timothy/Data/Projects/Orion/orion/src/components/SidebarBtn.js",[],"/home/timothy/Data/Projects/Orion/orion/src/screens/Dashboard.js",["78"],"import axios from 'axios';\nimport { Line } from 'rc-progress';\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport chevL from '../img/icon/left.png';\nimport fileE from '../img/icon/fileE.png'\nimport pc from '../img/icon/pc.png';\nimport plus from '../img/icon/plus.png';\nimport refresh from '../img/icon/refresh.png';\nimport { store } from '../redux/store';\nimport { devSet } from '../redux/action';\nimport { size } from '../utils/size';\n\nimport './css/dashboard.css';\n\nclass Dashboard extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            detailMode: '',\n            devName: '',\n            devRootDir: '',\n            prompt: '',\n        }\n\n        this.handleDeviceName = this.handleDeviceName.bind(this);\n        this.handelDeviceRootDir = this.handelDeviceRootDir.bind(this);\n\n        axios.get(`http://${window.location.hostname}:42070/devices/`)\n            .then(res => store.dispatch(devSet(res.data.filter(dev => dev.uid === this.props.acc._id))));\n    }\n\n    addDevice = () => {\n        if (this.state.devName !== '')\n            axios.post(`http://${window.location.hostname}:42070/devices/add`, {\n                name: this.state.devName,\n                rootDir: this.state.devRootDir,\n                uid: this.props.acc._id,\n            })\n                .then(() => this.setState({ prompt: 'Device Added' }))\n                .catch(() => this.setState({ prompt: 'Failed To Add Device' }));\n    }\n\n    addDeviceMode = () => this.setState({ detailMode: 'dev' });\n\n    cancelDetail = () => this.setState({ detailMode: '', prompt: '' });\n\n    handleDeviceName = event => this.setState({ devName: event.target.value });\n\n    handelDeviceRootDir = event => this.setState({ devRootDir: event.target.value });\n\n    render() {\n        return (\n            <div className='row dashRoot'>\n                <div className='dashContent'>\n                    <div className='row dashTopbar'>\n                        <div className='row dashCard dashTopLeftCard' style={{ justifyContent: 'space-around' }}>\n                            <div className='col' style={{ alignItems: 'flex-start' }}>\n                                <p className='dashStartText'>Start Full System Sync</p>\n                                <p>status: {this.props.bkup.status}</p>\n                            </div>\n                            <button className='dashStartButton'>\n                                <img className='dashStartIcon' src={refresh} alt='start' />\n                            </button>\n                        </div>\n                        <div className='row dashCard dashTopRightCard' style={{ justifyContent: 'space-around' }}>\n                            <div className='col' style={{ alignItems: 'flex-start' }}>\n                                <p className='dashStartText'>Selective Cloning</p>\n                                <p>status: {this.props.bkup.status}</p>\n                            </div>\n                            <div className='col'>\n                                <div className='row dashDeviceSelectContainer'>\n                                    <p>From: </p>\n                                    <select className='dashDeviceSelect'>\n\n                                    </select>\n                                </div>\n                                <div className='row dashDeviceSelectContainer'>\n                                    <p>To: </p>\n                                    <select className='dashDeviceSelect'>\n\n                                    </select>\n                                </div>\n                            </div>\n                            <button className='dashStartButton'>\n                                <img className='dashStartIcon' src={refresh} alt='start' />\n                            </button>\n                        </div>\n                    </div>\n                    <div className='row dashMain'>\n                        <div className='col dashMainLeft'>\n                            <div className='col dashCard dashLeftTopCard' style={{ justifyContent: 'center' }}>\n                                <p className='dashLeftCardLabel'>time since last backup: </p>\n                                <p className='dashTimeSinceNum'>00:00:00:00</p>\n                            </div>\n                            <div className='col dashCard dashLeftMiddleCard' style={{ justifyContent: 'space-around' }}>\n                                <p className='dashLeftCardLabel'>drive usage and size: </p>\n                                <div className='dashProgress'>\n                                    <Line percent={(this.props.fs.stats.size - this.props.fs.stats.free) / this.props.fs.stats.size * 100} strokeWidth='2' strokeColor='#e6b329' />\n                                </div>\n                                <div className='row dashProgress'>\n                                    <p>{size(this.props.fs.stats.size - this.props.fs.stats.free)}</p>\n                                    <p> out of </p>\n                                    <p>{size(this.props.fs.stats.size)}</p>\n                                </div>\n                            </div>\n                            <div className='col dashCard dashLeftBottomCard' style={{ justifyContent: 'space-around' }}>\n                                <div className='row dashLeftBottomLabelContainer'>\n                                    <p className='dashLeftCardLLabel'>registered devices: </p>\n                                    <button className='dashLeftCardRLabel' onClick={this.addDeviceMode}>\n                                        <img className='dashPlusIcon' src={plus} alt='btn' />\n                                    </button>\n                                </div>\n                                <div className='col dashDeviceList'>\n                                    {this.props.dev.map(dev => {\n                                        console.log(dev);\n                                        return (\n                                            <div>\n                                                <p>{dev.name}</p>\n                                            </div>\n                                        );\n                                    })}\n                                </div>\n                            </div>\n                        </div>\n                        <div className='col dashCard dashRightCard' style={{ justifyContent: 'space-around' }}>\n                            <p className='dashRightLabel'>Past Backup Reports</p>\n                            <div className='col dashReportList'>\n\n                            </div>\n                        </div>\n                    </div>\n                    <div className='col dashIndicator'>\n                        <div className='dashIndicatorBar'>\n                            <Line percent='100' strokeWidth='1' strokeColor='#e6b329' />\n                        </div>\n                    </div>\n                </div>\n                <div className='col dashDetail'>\n                    {this.state.detailMode === 'dev' &&\n                        <div className='col dashAddDeviceContainer'>\n                            <div style={{ width: '30ch' }}>\n                                <button className='fileNavBtn' onClick={this.cancelDetail}>\n                                    <img className='fileNavImg' src={chevL} />\n                                </button>\n                            </div>\n                            <div style={{ height: '14vh' }} />\n                            <img src={pc} alt='pc' />\n                            <div style={{ height: '4vh' }} />\n                            <p className='noselect loginInputLabel'>Device Name</p>\n                            <div className='loginInputBox'>\n                                <img className='loginIcons' src={pc} alt='logo' />\n                                <input className='loginInput' type='text' placeholder='New Device Name' onChange={this.handleDeviceName} />\n                            </div>\n                            <p className='noselect loginInputLabel'>Root Directory</p>\n                            <div className='loginInputBox'>\n                                <img className='loginIcons' src={fileE} alt='logo' />\n                                <input className='loginInput' type='text' placeholder='Device Root Directory' onChange={this.handelDeviceRootDir} />\n                            </div>\n                            <div style={{ height: '3vh' }} />\n\n                            <p>{this.state.prompt}</p>\n                            <div style={{ height: '3vh' }} />\n\n                            <button className='loginBtns loginBtn' onClick={this.addDevice}>\n                                <p>add</p>\n                            </button>\n                        </div>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    acc: state.acc,\n    bkup: state.bkup,\n    dev: state.dev,\n    fs: state.fs,\n});\n\nexport default connect(mapStateToProps)(Dashboard);","/home/timothy/Data/Projects/Orion/orion/src/screens/Settings.js",[],"/home/timothy/Data/Projects/Orion/orion/src/screens/Login.js",[],"/home/timothy/Data/Projects/Orion/orion/src/screens/Files.js",["79"],"import axios from 'axios';\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport ToggleSwitch from '../components/ToggleSwitch';\nimport folder from '../img/icon/folder.png';\nimport chevL from '../img/icon/left.png';\nimport fileE from '../img/icon/fileE.png'\nimport fileF from '../img/icon/fileF.png'\nimport { fsBack, fsSetDetail, fsSetDir, fsSetFocus, fsSetHidden, fsSetSearch, fsSetSelection, } from '../redux/action';\nimport { store } from '../redux/store';\nimport { size } from '../utils/size';\nimport { rnKey } from '../utils/randomKey';\n\nimport './css/files.css';\n\nclass Files extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleSearch = this.handleSearch.bind(this);\n    }\n\n    componentDidMount() {\n        const dir = this.props.fs.dir || this.props.acc.rootDir\n        store.dispatch(fsSetDir(dir));\n        if (this.props.fs.search)\n            this.props.clt.send('srq' + JSON.stringify({ dir, text: this.props.fs.search }));\n        else\n            this.props.clt.send('get' + dir);\n    }\n\n    append = folder => this.props.fs.dir + '/' + folder;\n\n    back = () => {\n        var l = this.props.fs.stack.length;\n        if (l > 1)\n            this.props.clt.send('get' + this.props.fs.stack[l - 2]);\n        store.dispatch(fsBack());\n    }\n\n    goto = dir => {\n        store.dispatch(fsSetDir(dir));\n        this.props.clt.send('get' + dir);\n        this.setState({ text: '' });\n    }\n\n    handleSearch = event => {\n        const text = event.target.value;\n        store.dispatch(fsSetSearch(text));\n        if (text.length > 2)\n            this.props.clt.send('srq' + JSON.stringify({ dir: this.props.fs.dir, text }));\n        else\n            this.props.clt.send('get' + this.props.fs.dir);\n    }\n\n    jump = dir => {\n        if (!this.props.acc.rootDir.includes(dir)) {\n            const splt = this.props.fs.dir.split('/').filter(d => d !== '');\n            let str = '/';\n            splt.slice(0, splt.indexOf(dir) + 1).forEach(d => str += d + '/');\n            return str;\n        }\n        return this.props.acc.rootDir;\n    }\n\n    getFileName = path => path.substring(path.lastIndexOf('/') + 1);\n\n    requestFile = () => {\n        axios.get(`http://${window.location.hostname}:42072${this.props.fs.select}`, { responseType: 'blob', timeout: 30000 })\n            .then(res => {\n                const url = window.URL.createObjectURL(new Blob([res.data]));\n                const link = document.createElement('a');\n\n                link.href = url;\n                link.setAttribute('download', this.getFileName(this.props.fs.select));\n\n                document.body.appendChild(link);\n\n                link.click();\n\n                link.parentNode.removeChild(link);\n            })\n    }\n\n    select = select => {\n        const selected = this.props.fs.dir + '/' + select;\n        if (this.props.fs.select === selected) {\n            store.dispatch(fsSetDetail({}));\n            store.dispatch(fsSetSelection(''));\n        }\n        else {\n            this.props.clt.send('dtl' + selected);\n            store.dispatch(fsSetSelection(selected));\n        }\n    }\n\n    tHidden = () => store.dispatch(fsSetHidden(!this.props.fs.hidden));\n\n    render() {\n        return (\n            <div>\n                <div className='row fileTop'>\n                    <button className='fileNavBtn' onClick={this.back}>\n                        <img className='fileNavImg' src={chevL} />\n                    </button>\n                    <div className='row fileDirBar' style={{ justifyContent: 'flex-start' }}>\n                        {this.props.fs.dir.split('/').filter(t => t !== '').map(t => {\n                            return (\n                                <button onClick={() => this.goto(this.jump(t))} key={t}>\n                                    <p className='fileDirBarText noselect'>{'/' + t}</p>\n                                </button>\n                            );\n                        })}\n                    </div>\n                    <div className='row fileOptionBar'>\n                        <ToggleSwitch checked={this.props.fs.hidden} text={this.props.fs.focus ? '' : 'Hidden'} toggle={this.tHidden} />\n                        <input\n                            className='fileSearchbarInput'\n                            onChange={this.handleSearch}\n                            onFocus={() => store.dispatch(fsSetFocus(true))}\n                            onBlur={() => store.dispatch(fsSetFocus(false))}\n                            placeholder='search ...'\n                            type='text'\n                            value={this.props.fs.search}\n                        />\n                    </div>\n                </div>\n                <div className='row fileContent'>\n                    <div className='col fileFolders' style={{ justifyContent: 'flex-start' }}>\n                        {this.props.fs.content.dirs\n                            .filter(d => !d.startsWith('.') || this.props.fs.hidden)\n                            .sort((a, b) => a.substring(0, 1).indexOf('.') - b.substring(0, 1).indexOf('.'))\n                            .map(d => {\n                                return (\n                                    <button onClick={() => this.goto(this.append(d))} key={rnKey()}>\n                                        <div className='fileFolder noselect'>\n                                            <img className='fileFolderImg' src={folder} alt='folder' />\n                                            <p className='fileItemText'>{d.substring(0, 15) + (d.length > 15 ? '...' : '')}</p>\n                                        </div>\n                                    </button>\n                                );\n                            })}\n                    </div>\n                    <div className='col fileFiles' style={{ alignItems: 'flex-start', justifyContent: 'flex-start' }}>\n                        {this.props.fs.content.files\n                            .filter(d => !d.startsWith('.') || this.props.fs.hidden)\n                            .sort(this.sortHidden)\n                            .map(f => {\n                                return (\n                                    <button onClick={() => this.select(f)} key={rnKey()}>\n                                        <div className='fileFolder noselect'>\n                                            <img className='fileFileImg' src={this.props.fs.select === (this.props.fs.dir + '/' + f) ? fileF : fileE} alt='file' />\n                                            <p className='fileItemText'>{f}</p>\n                                        </div>\n                                    </button>\n                                );\n                            })}\n                    </div>\n                    <div className='col fileMoreInfo'>\n                        {this.props.fs.select && <>\n                            <div className='col fileTextInfo'>\n                                <img className='fileInfoPic' src={fileE} alt='file' />\n                                <div className='row fileInfoContainer' style={{ alignItems: 'flex-start' }}>\n                                    <p>Name: </p>\n                                    <p className='fileInfoText'>{this.props.fs.details.path ? this.getFileName(this.props.fs.select) : ''}</p>\n                                </div>\n                                <div className='row fileInfoContainer' style={{ alignItems: 'flex-start' }}>\n                                    <p>Size: </p>\n                                    <p className='fileInfoText'>{this.props.fs.details.size ? size(this.props.fs.details.size) : ''}</p>\n                                </div>\n                                <div className='row fileInfoContainer' style={{ alignItems: 'flex-start' }}>\n                                    <p>L.M. Date: </p>\n                                    <p className='fileInfoText'>{this.props.fs.details.mTime ? new Date(this.props.fs.details.mTime).toLocaleDateString() : ''}</p>\n                                </div>\n                                <div className='row fileInfoContainer' style={{ alignItems: 'flex-start' }}>\n                                    <p>L.M. Time: </p>\n                                    <p className='fileInfoText'>{this.props.fs.details.mTime ? new Date(this.props.fs.details.mTime).toLocaleTimeString() : ''}</p>\n                                </div>\n                                <div className='row fileInfoContainer' style={{ alignItems: 'flex-start' }}>\n                                    <p>Path: </p>\n                                    <p className='fileInfoText'>{this.props.fs.details.path}</p>\n                                </div>\n                            </div>\n                            <div className='row fileDownloadBtnContainer'>\n                                <button className='row fileDownloadBtn' onClick={this.requestFile} style={{ justifyContent: 'center' }}>\n                                    <p>download</p>\n                                </button>\n                            </div>\n                        </>}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    acc: state.acc,\n    clt: state.clt,\n    fs: state.fs,\n});\n\nexport default connect(mapStateToProps)(Files);","/home/timothy/Data/Projects/Orion/orion/src/redux/action.js",[],"/home/timothy/Data/Projects/Orion/orion/src/components/ToggleSwitch.js",[],"/home/timothy/Data/Projects/Orion/orion/src/client/index.js",["80"],"import { w3cwebsocket as W3CWebSocket } from \"websocket\";\n\nimport { fsSetContent, fsSetDetail, fsSetStats, } from '../redux/action';\nimport { store } from '../redux/store';\n\nconst makeClient = (ip, acc) => {\n    const clt = new W3CWebSocket(`ws://${ip}:42071`);\n\n    clt.onopen = () => clt.send(`dsk${acc.rootDir}`);\n\n    clt.onmessage = message => {\n        const cmd = message.data.slice(0, 3);\n        const payload = message.data.substring(3);\n        console.log(cmd, payload);\n        switch (cmd) {\n            case 'cnt':\n                store.dispatch(fsSetContent(JSON.parse(payload)));\n                break;\n            case 'dtl':\n                store.dispatch(fsSetDetail(JSON.parse(payload)));\n                break;\n            case 'sre':\n                store.dispatch(fsSetContent(JSON.parse(payload)));\n                break;\n            case 'dsk':\n                store.dispatch(fsSetStats(JSON.parse(payload)));\n                break;\n        }\n    }\n\n    return clt;\n}\n\nexport default makeClient;",["81","82"],"/home/timothy/Data/Projects/Orion/orion/src/utils/size.js",[],"/home/timothy/Data/Projects/Orion/orion/src/utils/randomKey.js",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":5,"column":5,"nodeType":"89","messageId":"90","endLine":10,"endColumn":6},{"ruleId":"87","severity":1,"message":"88","line":15,"column":5,"nodeType":"89","messageId":"90","endLine":18,"endColumn":6},{"ruleId":"87","severity":1,"message":"88","line":49,"column":5,"nodeType":"89","messageId":"90","endLine":89,"endColumn":6},{"ruleId":"87","severity":1,"message":"88","line":94,"column":5,"nodeType":"89","messageId":"90","endLine":97,"endColumn":6},{"ruleId":"91","severity":1,"message":"92","line":146,"column":37,"nodeType":"93","endLine":146,"endColumn":79},{"ruleId":"91","severity":1,"message":"92","line":105,"column":25,"nodeType":"93","endLine":105,"endColumn":67},{"ruleId":"87","severity":1,"message":"88","line":15,"column":9,"nodeType":"89","messageId":"90","endLine":28,"endColumn":10},{"ruleId":"83","replacedBy":"94"},{"ruleId":"85","replacedBy":"95"},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["96"],["97"],"no-global-assign","no-unsafe-negation"]