[{"/home/timothy/Data/Projects/Orion/orion/src/index.js":"1","/home/timothy/Data/Projects/Orion/orion/src/App.js":"2","/home/timothy/Data/Projects/Orion/orion/src/reportWebVitals.js":"3","/home/timothy/Data/Projects/Orion/orion/src/navigation/index.js":"4","/home/timothy/Data/Projects/Orion/orion/src/redux/store.js":"5","/home/timothy/Data/Projects/Orion/orion/src/redux/reducer.js":"6","/home/timothy/Data/Projects/Orion/orion/src/components/SidebarBtn.js":"7","/home/timothy/Data/Projects/Orion/orion/src/screens/Dashboard.js":"8","/home/timothy/Data/Projects/Orion/orion/src/screens/Settings.js":"9","/home/timothy/Data/Projects/Orion/orion/src/screens/Login.js":"10","/home/timothy/Data/Projects/Orion/orion/src/screens/Files.js":"11","/home/timothy/Data/Projects/Orion/orion/src/redux/action.js":"12","/home/timothy/Data/Projects/Orion/orion/src/components/ToggleSwitch.js":"13","/home/timothy/Data/Projects/Orion/orion/src/client/index.js":"14","/home/timothy/Data/Projects/Orion/orion/src/utils/size.js":"15","/home/timothy/Data/Projects/Orion/orion/src/utils/randomKey.js":"16"},{"size":500,"mtime":1609610356007,"results":"17","hashOfConfig":"18"},{"size":354,"mtime":1611997544895,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1609610356007,"results":"20","hashOfConfig":"18"},{"size":2738,"mtime":1612895280265,"results":"21","hashOfConfig":"18"},{"size":113,"mtime":1609737095113,"results":"22","hashOfConfig":"18"},{"size":2611,"mtime":1613024566335,"results":"23","hashOfConfig":"18"},{"size":363,"mtime":1610090905519,"results":"24","hashOfConfig":"18"},{"size":7769,"mtime":1613028358099,"results":"25","hashOfConfig":"18"},{"size":204,"mtime":1609839518446,"results":"26","hashOfConfig":"18"},{"size":5645,"mtime":1613027603829,"results":"27","hashOfConfig":"18"},{"size":9387,"mtime":1612946744257,"results":"28","hashOfConfig":"18"},{"size":1766,"mtime":1613024398592,"results":"29","hashOfConfig":"18"},{"size":760,"mtime":1609830599973,"results":"30","hashOfConfig":"18"},{"size":1021,"mtime":1612946352683,"results":"31","hashOfConfig":"18"},{"size":239,"mtime":1612946602503,"results":"32","hashOfConfig":"18"},{"size":134,"mtime":1612946767035,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1wfrtp7",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/home/timothy/Data/Projects/Orion/orion/src/index.js",[],["69","70"],"/home/timothy/Data/Projects/Orion/orion/src/App.js",[],"/home/timothy/Data/Projects/Orion/orion/src/reportWebVitals.js",[],"/home/timothy/Data/Projects/Orion/orion/src/navigation/index.js",[],"/home/timothy/Data/Projects/Orion/orion/src/redux/store.js",[],"/home/timothy/Data/Projects/Orion/orion/src/redux/reducer.js",["71","72","73","74"],"/home/timothy/Data/Projects/Orion/orion/src/components/SidebarBtn.js",[],"/home/timothy/Data/Projects/Orion/orion/src/screens/Dashboard.js",["75"],"/home/timothy/Data/Projects/Orion/orion/src/screens/Settings.js",[],"/home/timothy/Data/Projects/Orion/orion/src/screens/Login.js",[],"/home/timothy/Data/Projects/Orion/orion/src/screens/Files.js",["76"],"import axios from 'axios';\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport ToggleSwitch from '../components/ToggleSwitch';\nimport folder from '../img/icon/folder.png';\nimport chevL from '../img/icon/left.png';\nimport fileE from '../img/icon/fileE.png'\nimport fileF from '../img/icon/fileF.png'\nimport { fsBack, fsSetDetail, fsSetDir, fsSetFocus, fsSetHidden, fsSetSearch, fsSetSelection, } from '../redux/action';\nimport { store } from '../redux/store';\nimport { size } from '../utils/size';\nimport { rnKey } from '../utils/randomKey';\n\nimport './css/files.css';\n\nclass Files extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleSearch = this.handleSearch.bind(this);\n    }\n\n    componentDidMount() {\n        const dir = this.props.fs.dir || this.props.acc.rootDir\n        store.dispatch(fsSetDir(dir));\n        if (this.props.fs.search)\n            this.props.clt.send('srq' + JSON.stringify({ dir, text: this.props.fs.search }));\n        else\n            this.props.clt.send('get' + dir);\n    }\n\n    append = folder => this.props.fs.dir + '/' + folder;\n\n    back = () => {\n        var l = this.props.fs.stack.length;\n        if (l > 1)\n            this.props.clt.send('get' + this.props.fs.stack[l - 2]);\n        store.dispatch(fsBack());\n    }\n\n    goto = dir => {\n        store.dispatch(fsSetDir(dir));\n        this.props.clt.send('get' + dir);\n        this.setState({ text: '' });\n    }\n\n    handleSearch = event => {\n        const text = event.target.value;\n        store.dispatch(fsSetSearch(text));\n        if (text.length > 2)\n            this.props.clt.send('srq' + JSON.stringify({ dir: this.props.fs.dir, text }));\n        else\n            this.props.clt.send('get' + this.props.fs.dir);\n    }\n\n    jump = dir => {\n        if (!this.props.acc.rootDir.includes(dir)) {\n            const splt = this.props.fs.dir.split('/').filter(d => d !== '');\n            let str = '/';\n            splt.slice(0, splt.indexOf(dir) + 1).forEach(d => str += d + '/');\n            return str;\n        }\n        return this.props.acc.rootDir;\n    }\n\n    getFileName = path => path.substring(path.lastIndexOf('/') + 1);\n\n    requestFile = () => {\n        axios.get(`http://${window.location.hostname}:42072${this.props.fs.select}`, { responseType: 'blob', timeout: 30000 })\n            .then(res => {\n                const url = window.URL.createObjectURL(new Blob([res.data]));\n                const link = document.createElement('a');\n\n                link.href = url;\n                link.setAttribute('download', this.getFileName(this.props.fs.select));\n\n                document.body.appendChild(link);\n\n                link.click();\n\n                link.parentNode.removeChild(link);\n            })\n    }\n\n    select = select => {\n        const selected = this.props.fs.dir + '/' + select;\n        if (this.props.fs.select === selected) {\n            store.dispatch(fsSetDetail({}));\n            store.dispatch(fsSetSelection(''));\n        }\n        else {\n            this.props.clt.send('dtl' + selected);\n            store.dispatch(fsSetSelection(selected));\n        }\n    }\n\n    tHidden = () => store.dispatch(fsSetHidden(!this.props.fs.hidden));\n\n    render() {\n        return (\n            <div>\n                <div className='row fileTop'>\n                    <button className='fileNavBtn' onClick={this.back}>\n                        <img className='fileNavImg' src={chevL} />\n                    </button>\n                    <div className='row fileDirBar' style={{ justifyContent: 'flex-start' }}>\n                        {this.props.fs.dir.split('/').filter(t => t !== '').map(t => {\n                            return (\n                                <button onClick={() => this.goto(this.jump(t))} key={t}>\n                                    <p className='fileDirBarText noselect'>{'/' + t}</p>\n                                </button>\n                            );\n                        })}\n                    </div>\n                    <div className='row fileOptionBar'>\n                        <ToggleSwitch checked={this.props.fs.hidden} text={this.props.fs.focus ? '' : 'Hidden'} toggle={this.tHidden} />\n                        <input\n                            className='fileSearchbarInput'\n                            onChange={this.handleSearch}\n                            onFocus={() => store.dispatch(fsSetFocus(true))}\n                            onBlur={() => store.dispatch(fsSetFocus(false))}\n                            placeholder='search ...'\n                            type='text'\n                            value={this.props.fs.search}\n                        />\n                    </div>\n                </div>\n                <div className='row fileContent'>\n                    <div className='col fileFolders' style={{ justifyContent: 'flex-start' }}>\n                        {this.props.fs.content.dirs\n                            .filter(d => !d.startsWith('.') || this.props.fs.hidden)\n                            .sort((a, b) => a.substring(0, 1).indexOf('.') - b.substring(0, 1).indexOf('.'))\n                            .map(d => {\n                                return (\n                                    <button onClick={() => this.goto(this.append(d))} key={rnKey()}>\n                                        <div className='fileFolder noselect'>\n                                            <img className='fileFolderImg' src={folder} alt='folder' />\n                                            <p className='fileItemText'>{d.substring(0, 15) + (d.length > 15 ? '...' : '')}</p>\n                                        </div>\n                                    </button>\n                                );\n                            })}\n                    </div>\n                    <div className='col fileFiles' style={{ alignItems: 'flex-start', justifyContent: 'flex-start' }}>\n                        {this.props.fs.content.files\n                            .filter(d => !d.startsWith('.') || this.props.fs.hidden)\n                            .sort(this.sortHidden)\n                            .map(f => {\n                                return (\n                                    <button onClick={() => this.select(f)} key={rnKey()}>\n                                        <div className='fileFolder noselect'>\n                                            <img className='fileFileImg' src={this.props.fs.select === (this.props.fs.dir + '/' + f) ? fileF : fileE} alt='file' />\n                                            <p className='fileItemText'>{f}</p>\n                                        </div>\n                                    </button>\n                                );\n                            })}\n                    </div>\n                    <div className='col fileMoreInfo'>\n                        {this.props.fs.select && <>\n                            <div className='col fileTextInfo'>\n                                <img className='fileInfoPic' src={fileE} alt='file' />\n                                <div className='row fileInfoContainer' style={{ alignItems: 'flex-start' }}>\n                                    <p>Name: </p>\n                                    <p className='fileInfoText'>{this.props.fs.details.path ? this.getFileName(this.props.fs.select) : ''}</p>\n                                </div>\n                                <div className='row fileInfoContainer' style={{ alignItems: 'flex-start' }}>\n                                    <p>Size: </p>\n                                    <p className='fileInfoText'>{this.props.fs.details.size ? size(this.props.fs.details.size) : ''}</p>\n                                </div>\n                                <div className='row fileInfoContainer' style={{ alignItems: 'flex-start' }}>\n                                    <p>L.M. Date: </p>\n                                    <p className='fileInfoText'>{this.props.fs.details.mTime ? new Date(this.props.fs.details.mTime).toLocaleDateString() : ''}</p>\n                                </div>\n                                <div className='row fileInfoContainer' style={{ alignItems: 'flex-start' }}>\n                                    <p>L.M. Time: </p>\n                                    <p className='fileInfoText'>{this.props.fs.details.mTime ? new Date(this.props.fs.details.mTime).toLocaleTimeString() : ''}</p>\n                                </div>\n                                <div className='row fileInfoContainer' style={{ alignItems: 'flex-start' }}>\n                                    <p>Path: </p>\n                                    <p className='fileInfoText'>{this.props.fs.details.path}</p>\n                                </div>\n                            </div>\n                            <div className='row fileDownloadBtnContainer'>\n                                <button className='row fileDownloadBtn' onClick={this.requestFile} style={{ justifyContent: 'center' }}>\n                                    <p>download</p>\n                                </button>\n                            </div>\n                        </>}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    acc: state.acc,\n    clt: state.clt,\n    fs: state.fs,\n});\n\nexport default connect(mapStateToProps)(Files);","/home/timothy/Data/Projects/Orion/orion/src/redux/action.js",[],"/home/timothy/Data/Projects/Orion/orion/src/components/ToggleSwitch.js",[],"/home/timothy/Data/Projects/Orion/orion/src/client/index.js",["77"],"import { w3cwebsocket as W3CWebSocket } from \"websocket\";\n\nimport { fsSetContent, fsSetDetail, fsSetStats, } from '../redux/action';\nimport { store } from '../redux/store';\n\nconst makeClient = (ip, acc) => {\n    const clt = new W3CWebSocket(`ws://${ip}:42071`);\n\n    clt.onopen = () => clt.send(`dsk${acc.rootDir}`);\n\n    clt.onmessage = message => {\n        const cmd = message.data.slice(0, 3);\n        const payload = message.data.substring(3);\n        console.log(cmd, payload);\n        switch (cmd) {\n            case 'cnt':\n                store.dispatch(fsSetContent(JSON.parse(payload)));\n                break;\n            case 'dtl':\n                store.dispatch(fsSetDetail(JSON.parse(payload)));\n                break;\n            case 'sre':\n                store.dispatch(fsSetContent(JSON.parse(payload)));\n                break;\n            case 'dsk':\n                store.dispatch(fsSetStats(JSON.parse(payload)));\n                break;\n        }\n    }\n\n    return clt;\n}\n\nexport default makeClient;","/home/timothy/Data/Projects/Orion/orion/src/utils/size.js",[],"/home/timothy/Data/Projects/Orion/orion/src/utils/randomKey.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":5,"column":5,"nodeType":"84","messageId":"85","endLine":10,"endColumn":6},{"ruleId":"82","severity":1,"message":"83","line":15,"column":5,"nodeType":"84","messageId":"85","endLine":18,"endColumn":6},{"ruleId":"82","severity":1,"message":"83","line":49,"column":5,"nodeType":"84","messageId":"85","endLine":89,"endColumn":6},{"ruleId":"82","severity":1,"message":"83","line":95,"column":5,"nodeType":"84","messageId":"85","endLine":103,"endColumn":6},{"ruleId":"86","severity":1,"message":"87","line":123,"column":37,"nodeType":"88","endLine":123,"endColumn":79},{"ruleId":"86","severity":1,"message":"87","line":105,"column":25,"nodeType":"88","endLine":105,"endColumn":67},{"ruleId":"82","severity":1,"message":"83","line":15,"column":9,"nodeType":"84","messageId":"85","endLine":28,"endColumn":10},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]